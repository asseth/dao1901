// Template to deploy contract compiled with solc --combined-json abi,bin
// in geth console
//
// Contract are deployed using the coinbase address

var Dao1901VotesAbiBin = {'bin': '606060405233600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c01000000000000000000000000908102040217905550604051602080610b36833981016040528080519060200190919050505b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009081020402179055505b50610a8b806100ab6000396000f36060604052361561008a576000357c010000000000000000000000000000000000000000000000000000000090048063013cf08b1461008f5780632127ca391461016657806324108475146101a457806335facf78146102085780633bd5aceb146102805780638da5cb5b146102a8578063a6f9dae1146102e6578063bc3f931f146103035761008a565b610002565b34610002576100aa60048080359060200190919050506103b2565b60405180806020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101555780601f1061012a57610100808354040283529160200191610155565b820191906000526020600020905b81548152906001019060200180831161013857829003601f168201915b505094505050505060405180910390f35b34610002576101786004805050610404565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34610002576102066004808035906020019091908035906020019082018035906020019191908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505090909190505061042a565b005b346100025761026a6004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019091905050610702565b6040518082815260200191505060405180910390f35b34610002576102926004805050610882565b6040518082815260200191505060405180910390f35b34610002576102ba600480505061088b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b346100025761030160048080359060200190919050506108b1565b005b3461000257610327600480803590602001909190803590602001909190505061094f565b60405180806020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281038252848181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156103a35780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b600360005060205280600052604060002060009150905080600001600050908060010160005054908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007fb123f68b8ba02b447d91a6629e121111b7dd6061ff418a60139c8bf00522a284600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160008314806104ae575060026000505483115b156104b857610002565b60036000506000848152602001908152602001600020600050905042816001016000505410156104e757610002565b6000825114156104f657610002565b60008160030160005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600001600050805460018160011615610100020316600290049050141561061d578060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c01000000000000000000000000908102040217905550338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009081020402179055505b818160030160005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061069e57805160ff19168380011785556106cf565b828001600101855582156106cf579182015b828111156106ce5782518260005055916020019190600101906106b0565b5b5090506106fa91906106dc565b808211156106f657600081815060009055506001016106dc565b5090565b50505b505050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561076057610002565b600160026000505401600260005081905550826003600050600060026000505481526020019081526020016000206000506000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107e057805160ff1916838001178555610811565b82800160010185558215610811579182015b828111156108105782518260005055916020019190600101906107f2565b5b50905061083c919061081e565b80821115610838576000818150600090555060010161081e565b5090565b5050620151808202420160036000506000600260005054815260200190815260200160002060005060010160005081905550600260005054905061087b565b5b92915050565b60026000505481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561090d57610002565b80600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690836c010000000000000000000000009081020402179055505b5b50565b6020604051908101604052806000815260200150600060006003600050600086815260200190815260200160002060005060030160005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000509050806000016000508160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a735780601f10610a4857610100808354040283529160200191610a73565b820191906000526020600020905b815481529060010190602001808311610a5657829003601f168201915b5050505050915092509250610a83565b50925092905056', 'abi': '[{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"proposals","outputs":[{"name":"description","type":"string"},{"name":"deadline","type":"uint256"},{"name":"head","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"membersContract","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_propId","type":"uint256"},{"name":"_choice","type":"string"}],"name":"vote","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_description","type":"string"},{"name":"_daysUntilDeadline","type":"uint256"}],"name":"createProposal","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"nProposals","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_propId","type":"uint256"},{"name":"_voter","type":"address"}],"name":"getVote","outputs":[{"name":"","type":"string"},{"name":"","type":"address"}],"payable":false,"type":"function"},{"inputs":[{"name":"_membersContract","type":"address"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"str","type":"string"}],"name":"LogString","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"addr","type":"address"}],"name":"LogAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"boo","type":"bool"}],"name":"LogBool","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"b","type":"bytes"}],"name":"LogBytes","type":"event"}]\n'};

var Dao1901VotesContract = web3.eth.contract(JSON.parse(Dao1901VotesAbiBin.abi));

export default function deployDao1901Votes(arg) {
    console.log('deploying Dao1901Votes contract...');
    return Dao1901VotesContract.new(
        arg,
        {from: web3.eth.coinbase,
          data: Dao1901VotesAbiBin.bin, gas: 1000000},
        function(error, contract){
            if (error) {
                console.error(error);
                return;
            }
            if(!contract.address) {
                console.log(
                    "contract Dao1901Votes creation transaction: " +
                        contract.transactionHash);
              console.log('contract 1: ', contract);
            } else {
                console.log("contract Dao1901Votes mined! Address: " + contract.address);
              // Expose Dao1901Members globally
              console.log('contract 2: ', contract);
              window.Dao1901Votes = contract;
            }
        })
}
